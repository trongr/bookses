var request = require("request")
var async = require("async")
var mongo = require("mongodb")
var server = new mongo.Server('localhost', 27017, {auto_reconnect:true})
var db = new mongo.Db(process.env.DB || "boks", server)
var helpers = require("./helpers.js")

db.open(function(er, db) {
    if (er) throw er
    console.log(module.filename + " connecting to " + (process.env.DB || "boks"))
})

var k = {
    static_public: "/static/public",
    response_limit: 20,
    localhost: "http://localhost:8080",
}

var DB = (function(){
    var DB = {}

    DB.create_book = function(book, done){
        db.collection("books", {safe:true}, function(er, docs){
            if (er) done({error:"DB.create_book",book:book,er:er})
            else docs.insert(book, {safe:true}, function(er, books){
                if (er) done({error:"DB.create_book",book:book,er:er})
                else if (books[0]) done(null, books[0])
                else done({error:"DB.create_book",er:"no book returned"})
            })
        })
    }

    DB.get_all_books = function(done){
        var query = {

        }
        var aux = {
            sort: [["created", true ? "desc" : "asc"]],
            limit: k.response_limit
        }
        db.collection("books", {safe:true}, function(er, docs){
            if (er) done({error:"db.get_all_books",er:er})
            else docs.find(query, aux).toArray(function(er, books){
                if (er) done({error:"db.get_all_books",er:er})
                else done(null, books)
            })
        })
    }

    DB.get_book_by_id = function(id, done){
        var query = {
            _id: new mongo.ObjectID(id)
        }
        db.collection("books", {safe:true}, function(er, docs){
            if (er) done({error:"db.get_book_by_id",id:id,er:er})
            else docs.findOne(query, function(er, book){
                if (er) done({error:"db.get_book_by_id",id:id,er:er})
                else done(null, book)
            })
        })
    }

    return DB
}())

var books = module.exports = (function(){
    var books = {}

    // todo
    books.create_book_validate = function(req, res, next){
        next(null)
    }

    books.create_book = function(req, res){
        var id = new mongo.ObjectID()
        var book = {
            _id: id,
            title: req.body.title,
            description: req.body.description,
            created: new Date(),
            src: k.static_public + "/" + id + ".html"
        }
        DB.create_book(book, function(er, book){
            if (er){
                console.log(JSON.stringify(er, 0, 2))
                res.send({error:"create book"})
            } else {
                res.send({book:book})
            }
        })
    }

    books.get_all_books = function(req, res){
        DB.get_all_books(function(er, books){
            if (er){
                console.log(JSON.stringify(er, 0, 2))
                res.send({error:"get all books"})
            } else {
                res.send({books:books})
            }
        })
    }

    books.get_book_by_id_validate = function(req, res, next){
        helpers.check_id(req.params.id, function(er){
            next(er)
        })
    }

    books.get_book_by_id = function(req, res){
        DB.get_book_by_id(req.params.id, function(er, book){
            if (er){
                console.log(JSON.stringify(er, 0, 2))
                res.send({error:"get book by id"})
            } else if (book){
                res.send({book:book})
            } else {
                res.send({error:"get book by id",info:"no such book"})
            }
        })
    }

    return books
}())

var test = (function(){
    var  test = {}

    test.create_book = function(){
        request.post({
            url: k.localhost + "/book",
            form: {
                title: "shakespeare's tempest",
                description: "too long didn't read",
            },
            json: true
        }, function(er, res, body){
            if (er) console.log(JSON.stringify(er, 0, 2))
            else console.log(JSON.stringify(body, 0, 2))
        })
    }

    test.get_all_books = function(){
        request.get({
            url: k.localhost + "/books",
            json: true
        }, function(er, res, body){
            if (er) console.log(JSON.stringify(er, 0, 2))
            else console.log(JSON.stringify(body, 0, 2))
        })
    }

    test.get_book_by_id = function(){
        request.get({
            url: k.localhost + "/book/5259f9d4dda122801a000001",
            json: true
        }, function(er, res, body){
            if (er) console.log(JSON.stringify(er, 0, 2))
            else console.log(JSON.stringify(body, 0, 2))
        })
    }

    return test
}())

console.log("requiring " + module.filename + " from " + require.main.filename)
if (require.main == module){

} else {

}
